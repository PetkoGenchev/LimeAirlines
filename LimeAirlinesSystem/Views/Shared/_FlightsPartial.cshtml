@model AllFlightsQueryModel
@inject SignInManager<Passanger> SignInManager

<div class="row">
    <h1 class="display-4">Outgoing Flights!</h1>
    @foreach (var flight in Model.Flights)
    {
        <div class="col-md-4 div-planes-partial">
            <div class="card mb-3 planes-partial">
                <h1 class="card-title text-center"> @flight.StartLocation @flight.EndLocation  @flight.FlightDate?.ToShortDateString() @flight.Price</h1>
                <div class="card-body text-center">
                    @if (User.IsAdmin())
                    {
                        <a asp-area="Admin" asp-controller="Flights" asp-action="Edit" asp-route-id="@flight.Id" class="btn btn-warning">Edit</a>
                        <a asp-area="Admin" asp-controller="Flights" asp-action="ChangeVisibility" asp-route-id="@flight.Id" class="btn btn-info float-right ml-3">@(flight.IsPublic ? "Hide" : "Show")</a>
                    }
                    else
                    {
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <input type="button" id="btnAddToBookings" value="Book" class="btn btn-primary btn-block" />
                            <input type="hidden" id="flightId" value=@flight.Id />
                            var passangerCount = (@Model.Passangers == 1) ? "passanger" : "passangers";

                            <div id="snackbar">Flight to @flight.EndLocation has been booked for @Model.Passangers @passangerCount.</div>
                        }
                    }
                </div>
            </div>
        </div>
    }
</div>

@if (Model.TripType == "2")
{
    @if (!Model.ReturnFlights.Any())
    {
        <div class="text-center">
            <p class="lead">There are no return flight options currently for the selected dates. Please check again later.</p>
        </div>
    }
    else
    {
        <div class="row">
            <h1 class="display-4">Return Flights!</h1>
            @foreach (var returnflight in Model.ReturnFlights)
            {
                <div class="col-md-4 div-planes-partial">
                    <div class="card mb-3 planes-partial">
                        <h1 class="card-title text-center"> @returnflight.StartLocation @returnflight.EndLocation  @returnflight.FlightDate?.ToShortDateString()</h1>
                        <div class="card-body text-center">
                            @if (User.IsAdmin())
                            {
                                <a asp-area="Admin" asp-controller="Flights" asp-action="Edit" asp-route-id="@returnflight.Id" class="btn btn-warning">Edit</a>
                                <a asp-area="Admin" asp-controller="Flights" asp-action="ChangeVisibility" asp-route-id="@returnflight.Id" class="btn btn-info float-right ml-3">@(returnflight.IsPublic ? "Hide" : "Show")</a>
                            }
                            else
                            {
                                <input type="button" id="btnAddToBookingsReturn" value="Book" class="btn btn-primary btn-block" />
                                <input type="hidden" id="flightIdReturn" value=@returnflight.Id />
                                var passangerCount = (@Model.Passangers == 1) ? "passanger" : "passangers";

                                <div id="snackbarReturn">Flight to @returnflight.EndLocation has been booked for @Model.Passangers @passangerCount.</div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
}


<script>
    const buttons = document.querySelectorAll('#btnAddToBookings');
    const returnButtons = document.querySelectorAll('#btnAddToBookingsReturn');
    var countOfSeats = @Html.Raw(Json.Serialize(Model.Passangers));

    buttons.forEach(btn => btn.addEventListener('click', (e) => {
        var id = e.target.parentElement.children[1].value;

        e.target.disabled = true;

        var x = document.getElementById("snackbar");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);

        fetch(`/Bookings/Book`, {
            method: 'POST',
            headers: {
                'Content-type': 'application/json',
            },
            body: JSON.stringify({
                flightId: id,
                countOfFlightSeats: countOfSeats
            })
        }).then(function (response) {
            if (response.ok) {
                return response.json();
            }
            return Promise.reject(response);
        }).then(data => {
            console.log('Success:' + countOfSeats);
        }).catch(function (error) {
            console.warn('Please Contact Support', error);
        });
    }));



    returnButtons.forEach(btn => btn.addEventListener('click', (e) => {
        var id = e.target.parentElement.children[1].value;

        e.target.disabled = true;

        var x = document.getElementById("snackbarReturn");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);

        fetch(`/Bookings/Book`, {
            method: 'POST',
            headers: {
                'Content-type': 'application/json',
            },
            body: JSON.stringify({
                flightId: id,
                countOfFlightSeats: countOfSeats
            })
        }).then(function (response) {
            if (response.ok) {
                return response.json();
            }
            return Promise.reject(response);
        }).then(data => {
            console.log('Success:' + countOfSeats);
        }).catch(function (error) {
            console.warn('Please Contact Support', error);
        });
    }));


</script>

