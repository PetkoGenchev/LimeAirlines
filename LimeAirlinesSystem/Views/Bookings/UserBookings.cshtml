@model IEnumerable<FlightBookingServiceModel>

@{
    ViewBag.Title = "My Flights";
}


@if (!Model.Any())
{
    <h3 class="text-center row-planes">You have not booked any flights yet!</h3>
}
else
{

    <h3>Upcoming Flights</h3>
    <div class="flex-booking">
        @foreach (var booking in Model.Where(x => x.FlightDate >= DateTime.UtcNow && x.IsCancelled == false).OrderBy(x => x.IsCheckedIn))
        {

            <section class="div-planes-partial card mb-3 flex-flights percent100width">
                <img class="card-img-top img-planes-partial width-15" src="@booking.ImageUrl" alt="@booking.EndLocation @booking.FlightDate?.ToShortDateString() @booking.CountOfSeats">


                <section id="bookingInfo" class="flight-item flex-flights distributed-flex">
                    <h4 class="flight-info m-auto text-center"> @booking.StartLocation to @booking.EndLocation </h4>
                    <div class="flex-flights">
                        <div>@booking.FlightDate?.ToShortDateString()</div>
                        <i class="fa-regular fa-lemon margin-5"></i>
                        <div>Reservation number: @booking.Id.Substring(0, 6).ToUpper()</div>
                        <i class="fa-regular fa-lemon margin-5"></i>
                        <div>@booking.CountOfSeats <i class="fa-solid fa-user"></i></div>
                    </div>
                </section>

                <section class="div-planes-partial card mb-3 flight-item flex-2 flex-200 distributed-flex">
                    <h6 class="flight-info">Additional Baggage</h6>
                    <div>Lite (5kg): @booking.SmallBaggage</div>
                    <div>Classic (10kg): @booking.MediumBaggage</div>
                    <div>Comfort (20kg): @booking.LargeBaggage</div>
                </section>




                <div class="card-body-small text-center flex-2 flex-150 distributed-flex">
                    @if (booking.FlightDate <= DateTime.UtcNow.AddDays(30) && booking.IsCheckedIn == false)
                    {
                        <a asp-area="" asp-controller="Bookings" asp-action="CheckIn" asp-route-bookingId="@booking.Id" class="btn btn-warning">Check In</a>
                    }

                    <a asp-area="" asp-controller="Bookings" asp-action="AddBaggage" asp-route-bookingId="@booking.Id" class="btn btn-warning">Add Baggage</a>

                    @if (booking.IsCheckedIn == false)
                    {
                        <a asp-area="" asp-controller="Bookings" asp-action="Cancel" asp-route-bookingId="@booking.Id" class="btn btn-warning">Cancel Flight</a>
                    }
                </div>
            </section>
        }
    </div>



    <div class="flex-2">
        <h3 class="hr">Flight History</h3>
        @{
            var flightHistoryList = Model.Where(x => x.FlightDate < DateTime.UtcNow && x.IsCancelled == false).OrderByDescending(x => x.FlightDate).Take(5);

            if (flightHistoryList.Any())
            {
                foreach (var booking in flightHistoryList)
                {
                    <section class="flight-item cancelled-booking">
                        <i class="fa-solid fa-plane-circle-check flex-50 distributed-flex"></i>
                        <h4 class="flight-info m-auto text-center flex-200 distributed-flex"> Status: Complated </h4>
                        <h4 class="flight-info m-auto text-center flex-200 distributed-flex"> @booking.StartLocation to @booking.EndLocation </h4>
                        <div class="flex-flights distributed-flex">
                            <div>@booking.FlightDate?.ToShortDateString()</div>
                            <i class="fa-regular fa-lemon margin-5"></i>
                            <div>Reservation number: @booking.Id.Substring(0, 6).ToUpper()</div>
                            <i class="fa-regular fa-lemon margin-5"></i>
                            <div>@booking.CountOfSeats <i class="fa-solid fa-user"></i></div>
                        </div>
                    </section>
                }
            }
            else
            {
                <h4 class="text-center row-planes">You have not have any previous flight records.</h4>
            }
        }

    </div>

    <div class="flex-2">
        <h3 class="hr">Cancelled Flights</h3>

        @{
            var cancelledFlightList = Model.Where(x => x.IsCancelled == true).OrderByDescending(x => x.FlightDate).Take(5);

            if (cancelledFlightList.Any())
            {
                foreach (var booking in cancelledFlightList)
                {
                    <section class="flight-item cancelled-booking">
                        <i class="fa-solid fa-plane-circle-xmark flex-50 distributed-flex"></i>
                        <h4 class="flight-info m-auto text-center flex-200 distributed-flex"> Status: Cancelled </h4>
                        <h4 class="flight-info m-auto text-center flex-200 distributed-flex"> @booking.StartLocation to @booking.EndLocation </h4>
                        <div class="flex-flights distributed-flex">
                            <div>@booking.FlightDate?.ToShortDateString()</div>
                            <i class="fa-regular fa-lemon margin-5"></i>
                            <div>Reservation number: @booking.Id.Substring(0, 6).ToUpper()</div>
                            <i class="fa-regular fa-lemon margin-5"></i>
                            <div>@booking.CountOfSeats <i class="fa-solid fa-user"></i></div>
                        </div>
                    </section>
                }
            }
            else
            {
                <h4 class="text-center row-planes">You have not have any flight cancelations.</h4>
            }
        }



    </div>

}